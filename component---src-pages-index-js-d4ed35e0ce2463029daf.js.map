{"version":3,"sources":["webpack://belfastjs/./src/components/bio.js","webpack://belfastjs/./src/pages/index.js"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","name","summary","href","twitter","location","siteTitle","title","allMarkdownRemark","nodes"],"mappings":"mIAyDA,IA9CY,WAAO,IAAD,IACVA,GAAOC,oBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,QAWZJ,aAAA,EAAAA,EAAQK,OACP,uCACa,8BAASL,EAAOK,MAD7B,KAC6CL,aAAA,EAAAA,EAAQM,UAAW,KADhE,IAGE,qBAAGC,KAAI,yBAAyBJ,aAAA,EAAAA,EAAQK,UAAR,KAAhC,yC,6FCmDV,UA5FkB,SAAC,GAAwB,IAAD,EAArBV,EAAqB,EAArBA,KAAMW,EAAe,EAAfA,SACnBC,GAAY,UAAAZ,EAAKG,KAAKC,oBAAV,eAAwBS,QAAxB,QACJb,EAAKc,kBAAkBC,MAgBrC,OACE,gBAAC,IAAD,CAAQJ,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cAEX,8SAMA,sPAKA,yaAQA,qSAMA,2JAIA,yCACe,qBAAGJ,KAAK,iCAAR,WADf","file":"component---src-pages-index-js-d4ed35e0ce2463029daf.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {/* <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      /> */}\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  // if (posts.length === 0) {\n  //   return (\n  //     <Layout location={location} title={siteTitle}>\n  //       <Seo title=\"All posts\" />\n  //       <Bio />\n  //       <p>\n  //         No blog posts found. Add markdown posts to \"content/blog\" (or the\n  //         directory you specified for the \"gatsby-source-filesystem\" plugin in\n  //         gatsby-config.js).\n  //       </p>\n  //     </Layout>\n  //   )\n  // }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      {/* <Bio /> */}\n      <p>\n        We are a group of passionate developers, designers, students, hobbyists\n        and other curious people based in Belfast, Northern Ireland. We usually\n        have a meetup every other month, where we have talks, presentations and\n        discussions on JavaScript and Web development in general.\n      </p>\n      <p>\n        We meet at several regular venues around the City centre area. We cover\n        JS and web dev fundamentals, frameworks, architecture, culture, tooling,\n        browser internals, performance, UX, creative coding, game dev, and more.\n      </p>\n      <p>\n        Our talk formats are a mixture of 'full length' talks (20-30 mins in\n        length) and 'lightning talks' (5-10 mins), and we try to provide a mix\n        of the two at every event. Occasionally we run an entire 'lightning\n        round' session comprised solely of lightning talks. We are flexible in\n        our approach - whatever works! Q&A is normally held after each talk,\n        though this is at the discretion of the speaker.\n      </p>\n      <p>\n        Whether you're a grizzled veteran, developing your skills, new to the\n        industry, a hobbyist, student, looking for a career change, or just\n        interested in general, you'll find something worth attending for - all\n        within a friendly, relaxed and diverse group of people.\n      </p>\n      <p>\n        Join us - all experience levels welcome! We are also always looking for\n        new speakers, so if you fancy giving it a go, tell us!\n      </p>\n      <p>\n        Follow us on <a href=\"https://twitter.com/BelfastJS\">Twitter</a> and hit\n        us up with questions or requests to talk / topics you'd like to see\n        covered!\n      </p>\n      {/* <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol> */}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}